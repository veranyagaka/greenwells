# Generated by Django 5.2.7 on 2025-10-09 14:24

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0003_alter_vehicle_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cylinder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('serial_number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('qr_code', models.CharField(db_index=True, editable=False, max_length=255, unique=True)),
                ('rfid_tag', models.CharField(db_index=True, editable=False, max_length=255, unique=True)),
                ('auth_hash', models.CharField(editable=False, max_length=64)),
                ('secret_key', models.CharField(editable=False, max_length=128)),
                ('cylinder_type', models.CharField(choices=[('6KG', '6 KG'), ('13KG', '13 KG'), ('26KG', '26 KG'), ('50KG', '50 KG')], max_length=10)),
                ('capacity_kg', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('manufacturer', models.CharField(max_length=100)),
                ('manufacturing_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('FILLED', 'Filled'), ('IN_DELIVERY', 'In Delivery'), ('EMPTY', 'Empty'), ('MAINTENANCE', 'Under Maintenance'), ('RETIRED', 'Retired'), ('STOLEN', 'Stolen/Lost')], default='ACTIVE', max_length=20)),
                ('last_known_location', models.TextField(blank=True)),
                ('last_scanned_at', models.DateTimeField(blank=True, null=True)),
                ('last_inspection_date', models.DateField(blank=True, null=True)),
                ('next_inspection_date', models.DateField(blank=True, null=True)),
                ('total_fills', models.IntegerField(default=0)),
                ('total_scans', models.IntegerField(default=0)),
                ('is_authentic', models.BooleanField(default=True)),
                ('is_tampered', models.BooleanField(default=False)),
                ('tamper_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('current_customer', models.ForeignKey(blank=True, limit_choices_to={'role': 'CUSTOMER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinders', to=settings.AUTH_USER_MODEL)),
                ('current_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinders', to='orders.order')),
                ('last_scanned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scanned_cylinders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cylinder',
                'verbose_name_plural': 'Cylinders',
                'db_table': 'cylinders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CylinderHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('REGISTERED', 'Registered'), ('FILLED', 'Filled'), ('DELIVERED', 'Delivered to Customer'), ('RETURNED', 'Returned from Customer'), ('SCANNED', 'Scanned'), ('INSPECTED', 'Inspected'), ('MAINTENANCE', 'Maintenance Performed'), ('STATUS_CHANGE', 'Status Changed'), ('CUSTOMER_ASSIGNED', 'Assigned to Customer'), ('CUSTOMER_UNASSIGNED', 'Unassigned from Customer'), ('TAMPER_DETECTED', 'Tamper Detected'), ('LOCATION_UPDATE', 'Location Updated')], max_length=30)),
                ('event_date', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('previous_status', models.CharField(blank=True, max_length=20)),
                ('new_status', models.CharField(blank=True, max_length=20)),
                ('location', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('verification_data', models.JSONField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, limit_choices_to={'role': 'CUSTOMER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinder_events', to=settings.AUTH_USER_MODEL)),
                ('cylinder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='orders.cylinder')),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinder_history', to='orders.delivery')),
                ('driver', models.ForeignKey(blank=True, limit_choices_to={'role': 'DRIVER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinder_deliveries', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinder_history', to='orders.order')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_cylinder_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cylinder History',
                'verbose_name_plural': 'Cylinder Histories',
                'db_table': 'cylinder_history',
                'ordering': ['-event_date'],
            },
        ),
        migrations.CreateModel(
            name='CylinderScan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_type', models.CharField(choices=[('QR', 'QR Code Scan'), ('RFID', 'RFID Tag Scan'), ('MANUAL', 'Manual Entry')], max_length=10)),
                ('scan_result', models.CharField(choices=[('SUCCESS', 'Successful Verification'), ('FAILED', 'Failed Verification'), ('SUSPICIOUS', 'Suspicious Activity'), ('TAMPERED', 'Tamper Detected'), ('EXPIRED', 'Cylinder Expired'), ('STOLEN', 'Reported Stolen')], max_length=20)),
                ('scanner_role', models.CharField(blank=True, max_length=20)),
                ('scanned_code', models.CharField(max_length=255)),
                ('scan_timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('scan_location_lat', models.FloatField(blank=True, null=True)),
                ('scan_location_lng', models.FloatField(blank=True, null=True)),
                ('scan_location_address', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('verification_message', models.TextField()),
                ('auth_token', models.CharField(blank=True, max_length=255)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('suspicious_reason', models.TextField(blank=True)),
                ('cylinder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='orders.cylinder')),
                ('related_delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinder_scans', to='orders.delivery')),
                ('related_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinder_scans', to='orders.order')),
                ('scanned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cylinder_scans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cylinder Scan',
                'verbose_name_plural': 'Cylinder Scans',
                'db_table': 'cylinder_scans',
                'ordering': ['-scan_timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='cylinder',
            index=models.Index(fields=['serial_number'], name='cylinders_serial__ee98fe_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinder',
            index=models.Index(fields=['qr_code'], name='cylinders_qr_code_b5b48a_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinder',
            index=models.Index(fields=['rfid_tag'], name='cylinders_rfid_ta_cefb1e_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinder',
            index=models.Index(fields=['status', 'cylinder_type'], name='cylinders_status_41a66e_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinder',
            index=models.Index(fields=['current_customer'], name='cylinders_current_aa081d_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinderhistory',
            index=models.Index(fields=['cylinder', '-event_date'], name='cylinder_hi_cylinde_5a3b55_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinderhistory',
            index=models.Index(fields=['customer', '-event_date'], name='cylinder_hi_custome_d6bbf9_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinderhistory',
            index=models.Index(fields=['event_type', '-event_date'], name='cylinder_hi_event_t_ab701c_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinderscan',
            index=models.Index(fields=['cylinder', '-scan_timestamp'], name='cylinder_sc_cylinde_5f8338_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinderscan',
            index=models.Index(fields=['scanned_by', '-scan_timestamp'], name='cylinder_sc_scanned_8c79a3_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinderscan',
            index=models.Index(fields=['scan_result', '-scan_timestamp'], name='cylinder_sc_scan_re_2ec5b3_idx'),
        ),
        migrations.AddIndex(
            model_name='cylinderscan',
            index=models.Index(fields=['is_suspicious'], name='cylinder_sc_is_susp_fa4873_idx'),
        ),
    ]
